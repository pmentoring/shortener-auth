name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: shortener_auth_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shortener_auth_test
      POSTGRES_TEST_DB: shortener_auth_test
      GO_ENV: test
      DATABASE_URL: postgres://postgres:password@localhost:5432/shortener_auth_test?sslmode=disable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22  # Adjust Go version as needed

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run database migrations
        run: |
          go build -o ./goose-custom ./cmd/migration/main.go
          ./goose-custom ./migration up

      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: go test ./... -v
